#include "header.h"

int main()
{
	srand(time(NULL));
	int num, num2, num3, monsterlvl = /*rand() % 30 +*/ 1, diceNumber = 0, total;//monster level to be imported in

	double cp = .01;
	double sp = .1;
	double gp = 1;
	double pp = 10;
	int gem = 275;
	double artObject = 1110;
	double mundane = 350;
	double minor = 1000;
	double medium = 10000;
	double major = 400000;
	double gold = 0;

	num = rand() % 100 + 1;
	num2 = rand() % 100 + 1;
	num3 = rand() % 100 + 1;

	if (monsterlvl == 1)
	{
		//cout << num << endl;
		if (num >= 96)
		{
			diceNumber = roll(4);
			gold += (diceNumber * (10 * pp));
		}
		else if (num >= 53)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}
			
			gold += (total * (10 * gp));
		}
		else if (num >= 30)
		{
			diceNumber = roll(8);
			gold += (diceNumber * (100 * sp));
		}
		else if (num >= 15)
		{
			diceNumber = roll(6);
			gold += (diceNumber * (1000 * cp));

			
		}
		else 
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;

		//cout << diceNumber << endl;
		//cout << gold << endl;

		/*if (num2 >= 96)
		{
			
			gold += gem;
			cout << "You found a gem, as you touch it turns into " << gem << " gold" << endl;
		}
		else if (num2 >= 91)
		{
			
			gold += artObject;
			cout << "You found some art, as you touch it turns into " << artObject << " gold" << endl;

		}
		else
		{
			gold += 0;
		}

		if (num3 >= 96)
		{

			gold += mundane;
			cout << "You found a mundane item, as you touch it turns into " << mundane << " gold" << endl;
		}
		else if (num3 >= 72)
		{

			gold += minor;
			cout << "You found a minor item, as you touch it turns into " << minor << " gold" << endl;

		}
		else
		{
			gold += 0;
		}

		cout << "You gained " << gold << "from the enemy" << endl;*/
		
	}
	else if (monsterlvl == 2)
	{
		if (num >= 96)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}
		else if (num >= 44)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (10 * gp));
		}
		else if (num >= 24)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (100 * sp));
		}
		else if (num >= 14)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (1000 * cp));


		}
		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 3)
	{
		if (num >= 96)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 42)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 22)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (100 * sp));
		}

		else if (num >= 12)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (1000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 4)
	{
		if (num >= 96)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 42)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 22)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}

		else if (num >= 12)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (1000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 5)
	{
		if (num >= 96)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 39)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 20)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}

		else if (num >= 11)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (10000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 6)
	{
		if (num >= 96)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 38)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 19)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}

		else if (num >= 11)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (10000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 7)
	{
		if (num >= 94)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 36)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 19)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}

		else if (num >= 12)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (10000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 8)
	{
		if (num >= 88)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 30)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 16)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}

		else if (num >= 11)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (10000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 9)
	{
		if (num >= 86)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 30)
		{
			total = 0;
			for (int i = 0; i < 5; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 16)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}

		else if (num >= 11)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (10000 * cp));
		}

		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 10)
	{
		if (num >= 80)
		{
			total = 0;
			for (int i = 0; i < 5; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 25)
		{
			total = 0;
			for (int i = 0; i < 6; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 11)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 11)
	{
		if (num >= 76)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (10 * pp));
		}

		else if (num >= 15)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (100 * gp));
		}

		else if (num >= 9)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 12)
	{
		if (num >= 76)
		{
			total = 0;
			for (int i = 0; i <1; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 15)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}

		else if (num >= 9)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (1000 * sp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 13)
	{
		if (num >= 76)
		{
			total = 0;
			for (int i = 0; i <1; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 9)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}

	
		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 14)
	{
		if (num >= 76)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 9)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 15)
	{
		if (num >= 75)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 4)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 16)
	{
		if (num >= 75)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 4)
		{
			total = 0;
			for (int i = 0; i < 1; i++)
			{
				diceNumber = roll(12);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 17)
	{
		if (num >= 69)
		{
			total = 0;
			for (int i = 0; i < 2; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 4)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 18)
	{
		if (num >= 66)
		{
			total = 0;
			for (int i = 0; i < 5; i++)
			{
				diceNumber = roll(4);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 3)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(6);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 19)
	{
		if (num >= 66)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 3)
		{
			total = 0;
			for (int i = 0; i < 3; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	else if (monsterlvl == 20)
	{
		if (num >= 66)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(10);
				total += diceNumber;
			}

			gold += (total * (100 * pp));
		}

		else if (num >= 3)
		{
			total = 0;
			for (int i = 0; i < 4; i++)
			{
				diceNumber = roll(8);
				total += diceNumber;
			}

			gold += (total * (1000 * gp));
		}


		else
		{
			gold += 0;
		}

		cout << "You found " << gold << " gold on the corpse" << endl;
	}
	

	
		


	system("pause");
	return 0;
}





________________________________________________________________




#include <iostream>
#include <string>
#include <ctime>


using namespace std;
const int MAX = 1000;

int roll(int diceNumber);






______________________________________________________________


#include "header.h"
int roll(int diceNumber)
{
	int dice = rand() % diceNumber;
	dice += 1;
	return dice;
}




















